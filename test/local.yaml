---
# Default values for local testing
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Enable maintenance mode
maintenance:
  enabled: false
  signature: "The iMio Team"
replicaCount: 1

image:
  repository: odoo
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "16.0"
  ## Optionally specify an imagePullSecret.
  ## Secret must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  # pullSecret: 
deployment:
  strategy: Recreate

postgresql:
  ## If true, install the Postgresql chart
  ## ref: https://github.com/bitnami/charts/blob/master/bitnami/postgresql/values.yaml
  ## If false, use an external postgresql database
  enabled: true
  auth:
    # Seems hardcoded: https://github.com/odoo/docker/blob/master/16.0/wait-for-psql.py#L21C5-L21C5
    # Database name should be false if you are using a multi-tenant setup
    # In this case, we are using the dbfilter option in the odoo section
    database: odoo
    username: odoo
    password: mySecuredPassword
    admin_password: mySecuredPassword
    existingSecret: odoo-postgresql-secret
    secretKeys:
      adminPasswordKey: postgresql-admin-password
      userPasswordKey: postgresql-password
  ## host of the external postgresql database
  # external : "10.7.121.11"
  host: "odoo-postgresql"
  port: 5432
  primary:
    persistence:
      enabled: false

odoo:
  init:
    enabled: true
    modules: base,web
  update:
    enabled: true
    modules: all
  server_wide_modules: base,web
  admin_passwd: "mySecuredPassword"
  proxy_mode: "True"
  workers: 2
  limit_memory_soft: 2147483648
  limit_memory_hard: 2684354560
  limit_request: 65536
  limit_time_cpu: 60
  limit_time_real: 120
  limit_time_real_cron: -1
  list_db: "False"
  addons_path: /mnt/extra-addons
  smtp_server: ""
  load_language: en_US
  without_demo: all
  # dbfilter is used to filter the databases that the user can see in a multi-tenant setup
  # dbfilter should be false if you are not using a multi-tenant setup
  # and you need to setup the postgresql.auth.database to the name of the database.
  dbfilter: false
  # db_name should be False if you are using a multi-tenant setup
  db_name: odoo
  db_maxconn: 64
  log_level: info
  log_handler: ":INFO"

# Use an existing secret for the Odoo configuration instead of generating one
existingSecret:
  enabled: false

# Use external-secrets.io for Odoo configuration instead of generating one
externalsecrets:
  enabled: false
  secretStoreRef:
    name: vault-backend
    postgresqlKey:
    odooKey:

persistence:
  enabled: false
  accessMode: ReadWriteOnce
  storageClass: "standard"
  size: 5Gi

extraEnv:
  - name: "TEST"
    value: "test"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

statefulSetSecurityAnnotations: {}

securityContext: 
  fsGroup: 101
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  # className: "public"
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  hosts:
    - host: odoo.local
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: odoo-local-tls
      hosts:
        - odoo.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

## Configure options for Odoo containers' liveness and readiness probes
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes

livenessProbe:
  httpGet:
    port: odoo-http
    path: /
  initialDelaySeconds: 300
  periodSeconds: 30
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

readinessProbe:
  httpGet:
    port: odoo-http
    path: /web/health
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

#startupProbe:
#  path: /web/health
#  initialDelaySeconds: 300
#  periodSeconds: 10
#  timeoutSeconds: 5
#  failureThreshold: 6
#  successThreshold: 1

nodeSelector: {}

tolerations: []

affinity: {}
