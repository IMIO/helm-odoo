---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "..fullname" . }}
  labels:
    {{- include "..labels" . | nindent 4 }}
spec:
  {{- if .Values.maintenance.enabled }}
  replicas: 0
  {{- else if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "..selectorLabels" . | nindent 6 }}
  strategy:
    type: {{ .Values.deployment.strategy }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.externalsecrets.enabled }}
        checksum/secret: {{ include (print $.Template.BasePath "/externalsecrets.yaml") . | sha256sum }}
        {{- else}}
        checksum/secret: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        {{- end }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "..selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      {{- if .Values.odoo.init.enabled }}
      initContainers:
        - name: init-db-odoo
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: ["/bin/bash", "-c", 'odoo -i {{ .Values.odoo.init.modules }} -d {{ .Values.postgresql.auth.database }} --stop-after-init']
          volumeMounts:
            - name: {{ include "..fullname" . }}-odoo-conf
              mountPath: /etc/odoo/odoo.conf
              subPath: odoo.conf
              readOnly: true
      {{- end }}
      {{- if .Values.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret }}
      {{- end }}
      containers:
        - name: {{ include "..fullname" . }}-proxy
          image: nginx
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: nginx-http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          volumeMounts:
            - name: {{ include "..fullname" . }}-nginx-conf
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf
        - name: {{ include "..fullname" . }}-service
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
      {{- if .Values.odoo.update.enabled }}
          command: ["/bin/bash", "-c", 'odoo --update {{ .Values.odoo.update.modules }} -d {{ .Values.postgresql.auth.database }}']
      {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: odoo-http
              containerPort: 8069
              protocol: TCP
            - name: odoo-lp-http
              containerPort: 8072
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: {{ include "..fullname" . }}-odoo-conf
              mountPath: /etc/odoo/odoo.conf
              subPath: odoo.conf
              readOnly: true
            - name: {{ include "..fullname" . }}-odoo-data
              mountPath: /var/lib/odoo
          {{- if .Values.extraEnv }}
          env:
          {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
          {{- if .Values.extraEnvFrom }}
          envFrom:
          {{- toYaml .Values.extraEnvFrom | nindent 12 }}
          {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          startupProbe:
            {{- toYaml .Values.startupProbe | nindent 12 }}
      volumes:
        - name: {{ include "..fullname" . }}-nginx-conf
          configMap:
            name: "{{ include "..fullname" . }}-nginx-conf"
        - name: {{ include "..fullname" . }}-odoo-conf
          secret:
            secretName: "{{ include "..fullname" . }}-odoo-conf"
        - name: {{ include "..fullname" . }}-odoo-data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            {{- if .Values.persistence.existingClaim }}
            claimName: {{ .Values.persistence.existingClaim }}
            {{- else }}
            claimName: {{ include "..fullname" . }}-odoo-data
            {{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- if .Values.maintenance.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "..fullname" . }}-maintenance-page
  labels:
    {{- include "..labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "..selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.maintenance.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "..selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: nginx
        image: nginx:1.25
        ports:
        - name: maint-http
          containerPort: 80
          protocol: TCP
        volumeMounts:
        - name: {{ include "..fullname" . }}-config-volume
          mountPath: /usr/share/nginx/html/maintenance/
        - name: {{ include "..fullname" . }}-default-config-volume
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
      volumes:
        - name: {{ include "..fullname" . }}-config-volume
          configMap:
            name: {{ include "..fullname" . }}-maintenance-page
        - name: {{ include "..fullname" . }}-default-config-volume
          configMap:
            name: {{ include "..fullname" . }}-default-conf
{{- end }}
